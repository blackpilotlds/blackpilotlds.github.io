1. Welcome guys! This is my presentation for you!

My topic is "Using CSS Keyframe Animations"

************************************************************************************
So... JavaScript or CSS?

Usually animation is the part of JavaScript BUT with modern browsers we can
animate in CSS[1]
************************************************************************************
************************************************************************************
What is the @keyframes?

"The @keyframes CSS at-rule, 

and by the way at-rules are

...CSS statements that instructs CSS how to behave. They begin with an at sign,
'@' (U+0040 COMMERCIAL AT), followed by an identifier and includes everything up
to the next semicolon, ';' (U+003B SEMICOLON), or the next CSS block, whichever
comes first...

so The @keyframes CSS at-rule, controls the intermediate steps in a CSS
animation sequence by defining styles for keyframes (or waypoints) along the
animation sequence. This gives more control over the intermediate steps of the
animation sequence than transitions."[2]
************************************************************************************
************************************************************************************
The Shorthand Animation Property

So instead of writing those properties separately, we can use which known as
"shorthand" animation property. And all tese attributes can be written in a
single line. Today we are going to see both.

====================================================================================
1. Animation Name
====================================================================================

The first property which I want to address is Animation-Name. As you can see
here we have a bouncing ball, and if we open inspect element>style editor tab.
Actually we have the same thing on the page. And it's pretty straight forward,
these are just names for our keyframes. So let's move on...

====================================================================================
2. Animation Duration
====================================================================================

Here we can adjust timing for animiation-duration and see the difference. Ok,
lest onpen inspect element>style editor tab and adjust it on the fly.

So we have three seconds for the ball to go from the top, bottom, and back to
the top. And we have 12 seconds for the ball to travel from left edge of the
screen to the right.

Let's put 1 second for bounce and 4 seconds for the moveLeft.

And you can see the difference right away. Thanks.

====================================================================================
3. Animation-Timing-Function
====================================================================================

Lest talk about Animation-Timing-Function.

I'm not sure if you can see the difference, but I will try my best.

I will apply ease-in-out value istead of lInear for moveLeft animation.

As we apply ease-in-out then we can see that angle for the TrajEctory is getting
smaller at the beginning and at the end.

====================================================================================
4. Animation-Delay
====================================================================================

With animation-delay we can delay our animation for a given period of time. In
my example I used 5 seconds delay for both of my keyframes.

====================================================================================
5. Animation-Iteration-Count
====================================================================================

With an original css file that ball will loop its way Infinitely. But if we put
specific number of repetition that will follow our guidance.

For example lets put 4 repetitions for a bounce and 1 repetition for a moveLeft, and
see the difference.

As you can see that after one long way, it stops on the left corner.